@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation

<Progress Class="mb-3">
    <ProgressBar Type="ProgressType.StripedAndAnimated" Color="ProgressColor.Dark" Width="@(progressPercent)" />
</Progress>

@code {
    private HubConnection? hubConnection;
    private double progressPercent = 0;
    private string? message;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/activityhub"))
            .Build();

        hubConnection.On<double>("Progress", (percent) =>
        {
            progressPercent = percent;
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
        await hubConnection.SendAsync("Start", message);
    }

    private async Task Stop()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("Stop");
            await hubConnection.StopAsync();
        }
    }

    public bool IsConnected =>
        hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}
